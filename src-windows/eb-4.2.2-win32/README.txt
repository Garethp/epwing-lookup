
		       EB ライブラリ Windows 版
	    CD-ROM 書籍にアクセスするための C のライブラリ


1. はじめに

EB ライブラリは CD-ROM 書籍にアクセスするための C のライブラリです。
このソフトウェアは、もともとは UNIX 系システム向けに開発されました。
本パッケージは、EB ライブラリを Windows 上で Visual Studio .NET を用い
てビルドさせるためのファイル一式を提供します。

EB ライブラリは EB, EBG, EBXA, EBXA-C, S-EBXA および EPWING 形式の
CD-ROM 書籍に対応しています。これらの形式の CD-ROM 書籍は、日本で一般
的に使われています。CD-ROM 書籍自体は ISO 9660 形式になっていますので、
他の ISO 9660 形式と同じ要領でマウントすることができます。

また、EB ライブラリは幾つかのユーテリティコマンドも提供しています。

	ebfont		CD-ROM 書籍内の外字のフォントデータを取り出す
	ebinfo		CD-ROM 書籍に関する情報を出力する
	ebrefile	CD-ROM 書籍のカタログファイルを構成し直す
	ebstopcode	CD-ROM 書籍の本文の区切りコードを検査する
	ebunzip		CD-ROM 書籍を伸長する
	ebzip		CD-ROM 書籍を圧縮する
	ebzipinfo	CD-ROM 書籍の圧縮情報を出力する

ebappendix コマンドは Perl スクリプトのため、本パッケージでは提供して
いませんので、ご注意下さい。

バージョン 4.0 から、EB ライブラリは他のホストの書籍にアクセスできる
ようになりました。遠隔アクセス用の識別子を使うことで、他ホスト上の
CD-ROM 書籍を指定することができます。この識別子は、次のような形式をと
ります。

	ebnet://<ホスト>:<ポート>/<書籍名>	  (CD-ROM 書籍本体)
	ebnet://<ホスト>:<ポート>/<書籍名>.app	  (付録パッケージ)

<ホスト> は遠隔ホストの IP アドレスもしくはホスト名です。ただし、IPv6
アドレスを指定する場合は、アドレスを `[' と `]' で囲む必要があります。

<ポート> は、そのホストが待ち受けているポートの番号です。ホストが待ち
受けているポートが標準の 22010 番であれば、`:<ポート>' の部分は省略可
能です。

以下に例を記します。

	ebnet://eb.example.com/dict
	ebnet://eb.example.com:22010/dict.app
	ebnet://192.168.1.1/dict.app
	ebnet://192.168.1.1:22010/dict
	ebnet://[fe80::290:27ff:fe3]/dict.app
	ebnet://[fe80::290:27ff:fe3]:22010/dict

遠隔アクセスを行うには、EBNETD を <ホスト> 上にインストールする必要が
あります。EBNETD は、EB Library 用の遠隔アクセスサーバのソフトウェア
です。

最新の EB ライブラリは次のところから入手できます。

	ftp://ftp.sra.co.jp/pub/misc/eb/

EB ライブラリに関する情報は次のところから得ることができます。

	http://www.sra.co.jp/people/m-kasahr/eb/

コメントやバグの報告は

	m-kasahr@sra.co.jp

宛に、日本語か英語でお送り下さい。


2. 使用許諾

EB ライブラリはフリーソフトウェアです。ソースコードおよびバイナリを、
いわゆる Modified BSD ライセンスの下で使用することが可能です。
(バージョン 4.1 よりも前のものは、GPL を採用していました。)
ライセンスに関して、詳しくは COPYING.txt という英文のファイルを参照
して下さい。


3. ソースコードからのビルド

Windows 用ソースコード配布版を用いて EB ライブラリをソースコードからビ
ルドするには、Visual Studio .NET が必要です。EB ライブラリのソースコー
ド配布版と、それに対応するバージョンの Windows 用ソースコード配布版、
さらに zlib バージョン 1.2.1 もしくはそれ以降を用意し、同じディレクト
リに展開します。つまり、展開後は作業ディレクトリ上に

	eb-<version>-win32\
	eb-<version>\
	zlib-<vesion>\

というサブディレクトリが存在するようにします。そして次に、サブディレク
トリ "eb-<version>" を "eb" という名前に変更します。同様に、サブディレ
クトリ "zlib-<version>" を "zlib" に変更します。

	eb-<version>-win32\
	eb\
	zlib\

この状態で、Visual Studio .NET にソリューションファイル

	eb-<version>-win32\eb.sln

を読み込ませ、ワークスペース内の全プロジェクトのビルドを行って下さい。


4. 生成されるバイナリについて

何の修正もせずにそのままビルドした場合、もしくはバイナリ配布版を使用す
る場合、バイナリは次のような特徴を持ちます。

    * 遠隔アクセス
      対応しています。
      OS が IPv6 をサポートしていれば、IPv6 も使用可能です。

    * メッセージの国際化
      対応しています。ただし、使える言語は日本語と英語だけです。
      日本語の際に使える文字コードは、シフトJIS だけです。

    * マルチスレッド
      対応していません。


5. ソースコード配布版の生成

ソースコード配布版の生成は、UNIX 環境で行う必要があります。もしくは、
Cygwin のような UNIX エミュレーション環境でも構いません。このディレク
トリ上で

	sh makedist.sh

を実行すると、生成されます。


6. バイナリ配布版の生成

バイナリ配布版の生成には、Inno Setup を使用しています。生成するにはま
ず準備として、Inno Setup の日本語のメッセージファイルを用意し、
Japanese.isl というファイル名でこのディレクトリに置きます。

また、Release ターゲットで EB ライブラリをビルドしておき、ランタイム
ライブラリ msvcr71.dll を本ディレクトリにコピーします。

ここまでの準備が整ったら、Inno Setup Compiler を起動し、eb.iss を読み
込ませます。後はビルドを行えば、バイナリ配布版が生成できます。


7. 他のアプリケーションへのリンク

EB ライブラリをリンクしたアプリケーションを配布する場合は、最低限
`eb.dll' を一緒に配布する必要があります。もし、メッセージの国際化機能
(eb_error_message() の国際化) を使いたい場合は、`locale/eb.mo' も一緒
に配布します。

`eb.mo' は、起動されたアプリケーションの存在するディレクトリから見て

	locale\LC_MESSAGES\Japanese\eb.mo
	..\locale\LC_MESSAGES\Japanese\eb.mo

のどちらかの位置に置いて下さい。
